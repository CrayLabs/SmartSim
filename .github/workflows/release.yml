#
# BSD 2-Clause License
#
# Copyright (c) 2021-2024, Hewlett Packard Enterprise
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

name: deploy-release

on:
  push:
    branches:
      - develop


# env:
#   HOMEBREW_NO_ANALYTICS: "ON" # Make Homebrew installation a little quicker
#   HOMEBREW_NO_AUTO_UPDATE: "ON"
#   HOMEBREW_NO_BOTTLE_SOURCE_FALLBACK: "ON"
#   HOMEBREW_NO_GITHUB_API: "ON"
#   HOMEBREW_NO_INSTALL_CLEANUP: "ON"
#   CIBW_SKIP: "pp* *i686*" # skip building for PyPy
#   CIBW_ARCHS_MACOS: x86_64
#   CIBW_ARCHS_LINUX: x86_64  # ppc64le # uncomment to enable powerPC build
#   CIBW_ENVIRONMENT_MACOS: PATH="$(brew --prefix)/opt/make/libexec/gnubin:$PATH"
#   MACOSX_DEPLOYMENT_TARGET: "10.09"


jobs:
  # build_wheels:
  #   name: Build wheels on ${{ matrix.os }}
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       os: [ubuntu-22.04, macos-12]

  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-python@v5

  #     - name: Install cibuildwheel
  #       run: python -m pip install cibuildwheel>=2.12.3

  #     - name: Install build-essentials
  #       if: contains(matrix.os, 'ubuntu')
  #       run: |
  #         sudo add-apt-repository ppa:ubuntu-toolchain-r/test
  #         sudo apt-get update
  #         sudo apt-get install -y build-essential
  #         sudo apt-get install -y wget

  #     - name: Install GNU make for MacOS
  #       if: contains(matrix.os, 'macos')
  #       run: brew install make || true

  #     - name: list target wheels
  #       run: |
  #         python -m cibuildwheel . --print-build-identifiers

  #     - name: Build wheels
  #       run: python -m cibuildwheel --output-dir wheelhouse
  #       env:
  #         CIBW_ENVIRONMENT_MACOS: PATH="$(brew --prefix)/opt/make/libexec/gnubin:$PATH"
  #         MACOSX_DEPLOYMENT_TARGET: "10.09"

  #     - uses: actions/upload-artifact@v2
  #       with:
  #         path: ./wheelhouse/*.whl


  # build_sdist:
  #   name: Build source distribution
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4

  #     - uses: actions/setup-python@v5
  #       name: Install Python
  #       with:
  #         python-version: '3.9'

  #     - name: Build sdist
  #       run: |
  #         python -m pip install cmake>=3.13
  #         python setup.py sdist

  #     - uses: actions/upload-artifact@v2
  #       with:
  #         path: dist/*.tar.gz


  # upload_pypi:
  #   needs: [build_wheels, build_sdist]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: artifact
  #         path: dist

  #     - uses: pypa/gh-action-pypi-publish@release/v1
  #       with:
  #         user: __token__
  #         password: ${{ secrets.PYPI }}
  #         #repository_url: https://test.pypi.org/legacy/


  createPullRequest:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Commit files
          run: |
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"

        - name: Create Pull Request
          uses: peter-evans/create-pull-request@v6
          with:
            git-token: ${{ secrets.PAT }}
            commit-message: test_3
            base: develop
            branch: master
            title: test_2
            body: test_1
            draft: false
